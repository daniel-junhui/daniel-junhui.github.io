{"version":3,"sources":["cbd.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","state","select1","select2","N","onChange1","e","setState","target","value","onChange2","this","array1","array2","miu11","sigma11","alert","normal1","randomNormal","i","push","lambda1","ex1","randomExponential","m1","thetaminus1","r1","w1","randomWeibull","miu12","sigma12","l1","randomLogNormal","miu21","sigma21","n2","lambda2","e2","m2","thetaminus2","r2","w2","miu22","sigma22","l2","num","R","radioStyle","display","height","lineHeight","className","src","logo","alt","span","Group","onChange","style","disabled","onClick","start","bind","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b8ec630.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cbd.9b523f2b.jpg\";","import logo from './cbd.jpg';\nimport './App.css';\nimport React from 'react';\nimport { Row, Col } from 'antd';\nimport { Radio, Input, Divider, Space, Button} from 'antd';\nimport 'antd/dist/antd.css';\nimport randomNormal from 'd3-random/src/normal'\nimport randomExponential from 'd3-random/src/exponential'\nimport randomLogNormal from 'd3-random/src/logNormal'\nimport randomWeibull from 'd3-random/src/weibull'\nexport default class App extends React.Component {\n    state = {\n        select1: -1,\n        select2: -1,\n        N: -1\n    }\n    onChange1 = e => {\n        this.setState({\n            select1: e.target.value,\n        });\n    };\n    onChange2 = e => {\n        this.setState({\n            select2: e.target.value,\n        });\n    };\n\n    start() {\n        let select1 = this.state.select1;\n        let select2 = this.state.select2;\n        let N = this.state.N\n        if(select1===-1 || select2===-1) {\n            alert(\"请选择分布\");\n            return;\n        }\n        if(N===-1) {\n            alert(\"请输入模拟次数\");\n            return;\n        }\n        let array1= []\n        let array2= []\n        switch(select1) {\n            case 1:\n                let miu11 = this.state.miu11;\n                let sigma11 = this.state.sigma11;\n                if(miu11==null || sigma11 ==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var normal1 = randomNormal(miu11,sigma11)\n                for(let i=0;i<N;++i) {\n                    array1.push(normal1())\n                }\n                break;\n            case 2:\n                let lambda1 = this.state.lambda1;\n                if(lambda1==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var ex1 = randomExponential(lambda1)\n                for(let i=0;i<N;++i) {\n                    array1.push(ex1())\n                }\n                break;\n            case 3:\n                let m1 = this.state.m1;\n                let thetaminus1 = this.state.thetaminus1;\n                let r1 = this.state.r1;\n                if(m1==null || thetaminus1==null || r1==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var w1 = randomWeibull(m1, r1, thetaminus1);\n                for(let i=0;i<N;++i) {\n                    array1.push(w1())\n                }\n                break;\n            case 4:\n                let miu12 = this.state.miu12;\n                let sigma12 = this.state.sigma12;\n                if(miu12==null || sigma12 ==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var l1 = randomLogNormal(miu12, sigma12)\n                for(let i=0;i<N;++i) {\n                    array1.push(l1())\n                }\n                break;\n            default:\n        }\n        switch(select2) {\n            case 1:\n                let miu21 = this.state.miu21;\n                let sigma21 = this.state.sigma21;\n                if(miu21==null || sigma21 ==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var n2 = randomNormal(miu21, sigma21)\n                for(let i=0;i<N;++i) {\n                    array2.push(n2())\n                }\n                break;\n            case 2:\n                let lambda2 = this.state.lambda2;\n                if(lambda2==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var e2 = randomExponential(lambda2)\n                for(let i=0;i<N;++i) {\n                    array2.push(e2())\n                }\n                break;\n            case 3:\n                let m2 = this.state.m2;\n                let thetaminus2 = this.state.thetaminus2;\n                let r2 = this.state.r2;\n                if(m2==null || thetaminus2==null || r2==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var w2 = randomWeibull(m2, r2, thetaminus2);\n                for(let i=0;i<N;++i) {\n                    array2.push(w2())\n                }\n                break;\n            case 4:\n                let miu22 = this.state.miu22;\n                let sigma22 = this.state.sigma22;\n                if(miu22==null || sigma22 ==null) {\n                    alert(\"请输入参数\")\n                    return;\n                }\n                var l2 = randomLogNormal(miu22, sigma22)\n                for(let i=0;i<N;++i) {\n                    array2.push(l2())\n                }\n                break;\n            default:\n        }\n        let num=0\n        for(let i=0;i<N;++i) {\n            if(array1[i]<array2[i])\n                ++num;\n        }\n        this.setState({\n            R:num/N\n        })\n\n        return\n    }\n\n    render(){\n        const radioStyle = {\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n        };\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <Row>\n                    <Col span={4}>\n                        <div>\n                            请选择应力分布\n                        </div>\n                        <Radio.Group onChange={this.onChange1} value={this.state.select1}>\n                            <Radio style={radioStyle} value={1}>\n                                正态分布\n                            </Radio>\n                            <Radio style={radioStyle} value={2}>\n                                指数分布\n                            </Radio>\n                            <Radio style={radioStyle} value={3}>\n                                韦伯分布\n                            </Radio>\n                            <Radio style={radioStyle} value={4}>\n                                对数正态分布\n                            </Radio>\n                        </Radio.Group>\n                    </Col>\n                    <Col span={5}>\n                        <div>\n                            正态分布参数\n                        </div>\n                        <Row className = \"Input\">\n                            <Col span={5}>\n                                &mu;:\n                            </Col>\n                            <Col span={18}>\n                                <Input disabled={!(this.state.select1===1)} onChange={e=>{\n                                    this.setState({\n                                        miu11: e.target.value\n                                    })\n                                }}/>\n                            </Col>\n                        </Row>\n                        <Row className = \"Input\">\n                            <Col span={5}>\n                                &sigma;:\n                            </Col>\n                            <Col span={18}>\n                                <Input disabled={!(this.state.select1===1)} onChange={e=>{\n                                    this.setState({\n                                        sigma11: e.target.value\n                                    })\n                                }}/>\n                            </Col>\n                        </Row>\n                    </Col>\n                        <Col span={5}>\n                            <div>\n                                指数分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &lambda;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select1===2)} onChange={e=>{\n                                        this.setState({\n                                            lambda1: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={5}>\n                            <div>\n                                韦伯分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    m:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select1===3)} onChange={e=>{\n                                        this.setState({\n                                            m1: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &theta;-r:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select1===3)} onChange={e=>{\n                                        this.setState({\n                                            thetaminus1: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    r:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select1===3)} onChange={e=>{\n                                        this.setState({\n                                            r1: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={5}>\n                            <div>\n                                对数正态分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &mu;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select1===4)} onChange={e=>{\n                                        this.setState({\n                                            miu12: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &sigma;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select1===4)} onChange={e=>{\n                                        this.setState({\n                                            sigma12: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Divider/>\n                    <Row>\n                        <Col span={4}>\n                            <div>\n                                请选择强度分布\n                            </div>\n                            <Radio.Group onChange={this.onChange2} value={this.state.select2}>\n                                <Radio style={radioStyle} value={1}>\n                                    正态分布\n                                </Radio>\n                                <Radio style={radioStyle} value={2}>\n                                    指数分布\n                                </Radio>\n                                <Radio style={radioStyle} value={3}>\n                                    韦伯分布\n                                </Radio>\n                                <Radio style={radioStyle} value={4}>\n                                    对数正态分布\n                                </Radio>\n                            </Radio.Group>\n                        </Col>\n                        <Col span={5}>\n                            <div>\n                                正态分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &mu;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===1)} onChange={e=>{\n                                        this.setState({\n                                            miu21: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &sigma;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===1)} onChange={e=>{\n                                        this.setState({\n                                            sigma21: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={5}>\n                            <div>\n                                指数分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &lambda;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===2)} onChange={e=>{\n                                        this.setState({\n                                            lambda2: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={5}>\n                            <div>\n                                韦伯分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    m:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===3)} onChange={e=>{\n                                        this.setState({\n                                            m2: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &theta;-r:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===3)} onChange={e=>{\n                                        this.setState({\n                                            thetaminus2: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    r:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===3)} onChange={e=>{\n                                        this.setState({\n                                            r2: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={5}>\n                            <div>\n                                对数正态分布参数\n                            </div>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &mu;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===4)} onChange={e=>{\n                                        this.setState({\n                                            miu22: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className = \"Input\">\n                                <Col span={5}>\n                                    &sigma;:\n                                </Col>\n                                <Col span={18}>\n                                    <Input disabled={!(this.state.select2===4)} onChange={e=>{\n                                        this.setState({\n                                            sigma22: e.target.value\n                                        })\n                                    }}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <Divider/>\n                    <Space>\n                                模拟次数\n                                <Input onChange={e=>{\n                                    this.setState({\n                                        N: e.target.value\n                                    })\n                                }}/>\n                                结果：{this.state.R}\n                    </Space>\n                    <Divider/>\n                            <Button className=\"button\" onClick={this.start.bind(this)}>开始模拟</Button>\n                </header>\n            </div>)\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}